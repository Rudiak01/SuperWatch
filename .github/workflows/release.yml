name: Release ZIP

on:
  push:
    branches:
      - main

jobs:
  release:
    name: Build & Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get latest tag
        id: get_tag
        run: |
          TAG=$(git tag --sort=-creatordate | head -n 1)
          if [ -z "$TAG" ]; then
            TAG="v0.0.0"
          fi
          echo "Latest tag: $TAG"
          echo "tag=$TAG" >> $GITHUB_OUTPUT

      - name: Bump version
        id: bump
        run: |
          OLD=${{ steps.get_tag.outputs.tag }}
          OLD=${OLD#v}
          IFS='.' read -r -a parts <<< "$OLD"
          PATCH=$((parts[2]+1))
          NEW="v${parts[0]}.${parts[1]}.$PATCH"
          echo "New version: $NEW"
          echo "new_tag=$NEW" >> $GITHUB_OUTPUT

      - name: Create ZIP archive
        run: |
          zip -r "release-${{ steps.bump.outputs.new_tag }}.zip" . -x ".git/*" ".github/*"

      - name: Create Git Tag
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag ${{ steps.bump.outputs.new_tag }}
          git push origin ${{ steps.bump.outputs.new_tag }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.bump.outputs.new_tag }}
          name: Release ${{ steps.bump.outputs.new_tag }}
          body: |
            üîÑ Auto-generated release
          files: release-${{ steps.bump.outputs.new_tag }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }} # ‚Üê ou secrets.GITHUB_TOKEN si ce n'est pas un fork
